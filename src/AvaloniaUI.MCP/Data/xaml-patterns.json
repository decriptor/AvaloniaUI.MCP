{
  "avalonia_xaml_patterns": {
    "basic_window": {
      "name": "Basic Window Structure",
      "description": "Standard window with AvaloniaUI namespaces and basic structure",
      "xaml": "<Window xmlns=\"https://github.com/avaloniaui\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        x:Class=\"MyApp.MainWindow\"\n        Title=\"My Application\"\n        Width=\"800\"\n        Height=\"600\">\n    <!-- Content goes here -->\n</Window>",
      "key_points": [
        "Always include AvaloniaUI namespace as default",
        "Include XAML namespace with 'x' prefix",
        "Set appropriate Title, Width, and Height",
        "Use x:Class for code-behind connection"
      ]
    },
    "mvvm_window": {
      "name": "MVVM Window with DataContext",
      "description": "Window configured for MVVM pattern with ViewModel binding",
      "xaml": "<Window xmlns=\"https://github.com/avaloniaui\"\n        xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n        xmlns:vm=\"using:MyApp.ViewModels\"\n        x:Class=\"MyApp.Views.MainWindow\"\n        x:DataType=\"vm:MainWindowViewModel\"\n        Title=\"{Binding Title}\"\n        Width=\"800\"\n        Height=\"600\">\n    \n    <Design.DataContext>\n        <vm:MainWindowViewModel/>\n    </Design.DataContext>\n    \n    <!-- Content with bindings -->\n</Window>",
      "key_points": [
        "Import ViewModels namespace",
        "Use x:DataType for compiled bindings",
        "Set Design.DataContext for design-time support",
        "Bind window properties to ViewModel"
      ]
    },
    "data_binding": {
      "name": "Data Binding Patterns",
      "description": "Common data binding scenarios in AvaloniaUI",
      "xaml": "<!-- Simple Property Binding -->\n<TextBlock Text=\"{Binding UserName}\" />\n\n<!-- Two-Way Binding -->\n<TextBox Text=\"{Binding UserInput, Mode=TwoWay}\" />\n\n<!-- Command Binding -->\n<Button Content=\"Save\" Command=\"{Binding SaveCommand}\" />\n\n<!-- Converter Binding -->\n<TextBlock Text=\"{Binding Count, Converter={StaticResource CountToStringConverter}}\" />\n\n<!-- RelativeSource Binding -->\n<TextBlock Text=\"{Binding DataContext.Title, RelativeSource={RelativeSource AncestorType=Window}}\" />",
      "key_points": [
        "Use {Binding PropertyName} for simple bindings",
        "Specify Mode=TwoWay for input controls",
        "Commands are bound using Command property",
        "Use converters for data transformation",
        "RelativeSource for ancestor bindings"
      ]
    },
    "styles_and_resources": {
      "name": "Styles and Resources",
      "description": "Defining and using styles and resources in AvaloniaUI",
      "xaml": "<Window.Resources>\n    <!-- Colors -->\n    <SolidColorBrush x:Key=\"PrimaryBrush\" Color=\"#FF0078D4\" />\n    \n    <!-- Styles -->\n    <Style Selector=\"Button.primary\">\n        <Setter Property=\"Background\" Value=\"{StaticResource PrimaryBrush}\" />\n        <Setter Property=\"Foreground\" Value=\"White\" />\n        <Setter Property=\"Padding\" Value=\"16,8\" />\n    </Style>\n    \n    <!-- Data Templates -->\n    <DataTemplate x:Key=\"PersonTemplate\" DataType=\"{x:Type vm:Person}\">\n        <StackPanel Orientation=\"Horizontal\">\n            <TextBlock Text=\"{Binding FirstName}\" />\n            <TextBlock Text=\"{Binding LastName}\" Margin=\"5,0,0,0\" />\n        </StackPanel>\n    </DataTemplate>\n</Window.Resources>\n\n<!-- Usage -->\n<Button Classes=\"primary\" Content=\"Primary Button\" />\n<ListBox ItemTemplate=\"{StaticResource PersonTemplate}\" />",
      "key_points": [
        "Define resources in Resources section",
        "Use Selector syntax for styling",
        "Apply styles using Classes property",
        "DataTemplates for custom item presentation",
        "StaticResource for resource references"
      ]
    },
    "layout_grid": {
      "name": "Grid Layout Pattern",
      "description": "Using Grid for complex layouts",
      "xaml": "<Grid>\n    <Grid.RowDefinitions>\n        <RowDefinition Height=\"Auto\" />\n        <RowDefinition Height=\"*\" />\n        <RowDefinition Height=\"Auto\" />\n    </Grid.RowDefinitions>\n    <Grid.ColumnDefinitions>\n        <ColumnDefinition Width=\"200\" />\n        <ColumnDefinition Width=\"*\" />\n    </Grid.ColumnDefinitions>\n    \n    <!-- Header spans all columns -->\n    <TextBlock Grid.Row=\"0\" Grid.ColumnSpan=\"2\" \n               Text=\"Application Header\" \n               Background=\"LightGray\" \n               Padding=\"10\" />\n    \n    <!-- Sidebar -->\n    <StackPanel Grid.Row=\"1\" Grid.Column=\"0\" \n                Background=\"LightBlue\" \n                Margin=\"5\">\n        <Button Content=\"Menu Item 1\" />\n        <Button Content=\"Menu Item 2\" />\n    </StackPanel>\n    \n    <!-- Main content -->\n    <ContentControl Grid.Row=\"1\" Grid.Column=\"1\" \n                    Content=\"{Binding CurrentView}\" \n                    Margin=\"5\" />\n    \n    <!-- Footer -->\n    <StatusBar Grid.Row=\"2\" Grid.ColumnSpan=\"2\">\n        <TextBlock Text=\"Ready\" />\n    </StatusBar>\n</Grid>",
      "key_points": [
        "Define rows and columns first",
        "Use Auto for content-sized rows/columns",
        "Use * for proportional sizing",
        "Grid.ColumnSpan for spanning multiple columns",
        "Grid.Row and Grid.Column for positioning"
      ]
    },
    "user_control": {
      "name": "Custom UserControl",
      "description": "Creating reusable UserControl components",
      "xaml": "<UserControl xmlns=\"https://github.com/avaloniaui\"\n             xmlns:x=\"http://schemas.microsoft.com/winfx/2006/xaml\"\n             x:Class=\"MyApp.Controls.PersonCard\">\n    \n    <Border BorderBrush=\"Gray\" \n            BorderThickness=\"1\" \n            CornerRadius=\"5\" \n            Padding=\"10\">\n        <StackPanel>\n            <TextBlock Text=\"{Binding Name}\" \n                       FontWeight=\"Bold\" \n                       FontSize=\"16\" />\n            <TextBlock Text=\"{Binding Email}\" \n                       Foreground=\"Gray\" />\n            <TextBlock Text=\"{Binding Phone}\" \n                       Foreground=\"Gray\" />\n        </StackPanel>\n    </Border>\n</UserControl>",
      "key_points": [
        "UserControl for reusable components",
        "Bind to properties of the DataContext",
        "Use Border for visual boundaries",
        "Style with appropriate colors and spacing"
      ]
    }
  }
}